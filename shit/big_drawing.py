def main(text: str):
    if not isinstance(text, str):
        raise Exception("Hey, you need a text, not a {} !".format(type(text)))
    text = text.upper()
    translate = {
        " ": [
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
            "                   ",
        ],
        "A": [
            "         A         ",
            "        A A        ",
            "       A   A       ",
            "      A     A      ",
            "     AAAAAAAAA     ",
            "    A         A    ",
            "   A           A   ",
            "  A             A  ",
            " A               A ",
            "A                 A",
        ],
        "B": [
            "BBBBBBBBBB        ",
            "B         BBB     ",
            "B            B    ",
            "B            B    ",
            "BBBBBBBBBBBB      ",
            "B         BBB     ",
            "B            B    ",
            "B            B    ",
            "B          BB     ",
            "BBBBBBBBBBBB      ",
        ],
        "C": [
            "       CCCCCCC    ",
            "   CCCC           ",
            " CC               ",
            "CC                ",
            "CC                ",
            "CC                ",
            "CC                ",
            " CC               ",
            "   CC             ",
            "     CCCCCCCCC    ",
        ],
        "D": [
            "DDDDDDDD          ",
            "D       DDDD      ",
            "D           DD    ",
            "D            DD   ",
            "D            DD   ",
            "D            DD   ",
            "D            DD   ",
            "D           DD    ",
            "D         DD      ",
            "DDDDDDDDDD        ",
        ],
        "E": [
            "EEEEEEEEEEEEEEEEE  ",
            "E                  ",
            "E                  ",
            "E                  ",
            "E                  ",
            "EEEEEEEEEEEEE      ",
            "E                  ",
            "E                  ",
            "E                  ",
            "EEEEEEEEEEEEEEEEE  ",
        ],
        "F": [
            "FFFFFFFFFFFFFFFFF  ",
            "F                  ",
            "F                  ",
            "F                  ",
            "F                  ",
            "FFFFFFFFFFFFFFF    ",
            "F                  ",
            "F                  ",
            "F                  ",
            "F                  ",
        ],
        "G": [
            "       GGGGGGG     ",
            "   GGGG            ",
            " GG                ",
            "GG                 ",
            "GG                 ",
            "GG                 ",
            "GG      GGGGGGG    ",
            " GG           G    ",
            "   GG         G    ",
            "     GGGGGGGGG     ",
        ],
        "H": [
            " H               H ",
            " H               H ",
            " H               H ",
            " H               H ",
            " H               H ",
            " HHHHHHHHHHHHHHHHH ",
            " H               H ",
            " H               H ",
            " H               H ",
            " H               H ",
        ],
        "I": [
            "  IIIIIIIIIIIIIII  ",
            "         II        ",
            "         II        ",
            "         II        ",
            "         II        ",
            "         II        ",
            "         II        ",
            "         II        ",
            "         II        ",
            "  IIIIIIIIIIIIIII  ",
        ],
        "J": [
            "    JJJJJJJJJJ     ",
            "         JJ        ",
            "         JJ        ",
            "         JJ        ",
            "         JJ        ",
            "         JJ        ",
            "         JJ        ",
            "         JJ        ",
            "JJ       JJ        ",
            "  JJJJJJJJJ        ",
        ],
        "K": [
            "K             KK   ",
            "K           KKK    ",
            "K        KKK       ",
            "K     KKK          ",
            " KKKKK             ",
            "K     KKK          ",
            "K        KKK       ",
            "K           KKK    ",
            "K             KK   ",
            "K             KKK  ",
        ],
        "L": [
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "L                  ",
            "LLLLLLLLLLLLLLL    ",
        ],
        "M": [
            "M                 M",
            "M M             M M",
            "M  M           M  M",
            "M    M       M    M",
            "M     M     M     M",
            "M      M   M      M",
            "M       M M       M",
            "M        M        M",
            "M                 M",
            "M                 M",
        ],
        "N": [
            "N           N       ",
            "N N         N       ",
            "N  N        N       ",
            "N    N      N       ",
            "N     N     N       ",
            "N      N    N       ",
            "N       N   N       ",
            "N        N  N       ",
            "N         N N       ",
            "N           N       ",
        ],
        "O": [],
        "P": [
            "PPPPPPPPPP        ",
            "P        PPPP     ",
            "P           PP    ",
            "P           PP    ",
            "PPPPPPPPPPPPP     ",
            "P                 ",
            "P                 ",
            "P                 ",
            "P                 ",
            "P                 ",
        ],
    }
    to_draw = ""
    index = 0
    for index in range((len(text)) // 5 + 1):
        to_draw = text[index * 5 : min((index + 1) * 5, len(text))]
        for i in range(10):
            print("      ".join([translate[j][i] for j in to_draw]))
        print("\n\n")


main("ABBA C genial")
